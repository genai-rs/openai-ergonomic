[package]
name = "openai-ergonomic"
version = "0.5.0"
authors = ["Tim Van Wassenhove <github@timvw.be>"]
edition = "2021"
rust-version = "1.82"
description = "Ergonomic Rust wrapper for OpenAI API"
documentation = "https://docs.rs/openai-ergonomic"
readme = "README.md"
homepage = "https://github.com/genai-rs/openai-ergonomic"
repository = "https://github.com/genai-rs/openai-ergonomic"
license = "MIT OR Apache-2.0"
keywords = ["openai", "api", "ai", "gpt", "assistant"]
categories = ["api-bindings", "asynchronous"]
exclude = [".github", "docs/", ".gitignore"]

[dependencies]
openai-client-base = "^0.7"
bon = "^3.0"
serde = { version = "^1.0.228", features = ["derive"] }
serde_json = "^1.0.145"
tokio = { version = "^1.35", features = ["full"] }
reqwest = { version = "^0.12.24", default-features = false, features = ["json", "stream"] }
reqwest-middleware = "^0.4.2"
futures = "^0.3.31"
thiserror = "^2.0.17"
tracing = "^0.1.41"
opentelemetry-semantic-conventions = { version = "^0.31", features = ["semconv_experimental"] }
opentelemetry = { version = "^0.31", features = ["trace"] }
opentelemetry_sdk = { version = "^0.31", features = ["rt-tokio", "trace", "experimental_trace_batch_span_processor_with_async_runtime"] }
opentelemetry-langfuse = "^0.6"
async-trait = "^0.1.89"
bytes = "^1.5"
uuid = { version = "^1.10", features = ["v4"] }
tokio-stream = { version = "^0.1.17", features = ["io-util"] }
mockito = { version = "^1.2", optional = true }
http = "^1.3.1"

[dev-dependencies]
mockito = "^1.2"
tracing-subscriber = { version = "^0.3.20", features = ["env-filter"] }
regex = "^1.5"
tempfile = "^3.10"
rand = "^0.9.2"
reqwest-retry = "^0.7"

[features]
default = ["rustls-tls"]
rustls-tls = ["reqwest/rustls-tls"]
native-tls = ["reqwest/native-tls-vendored"]
test-utils = ["mockito"]

[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3
lto = true
codegen-units = 1

[lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"

[lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }
module_name_repetitions = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
must_use_candidate = "allow"
multiple_crate_versions = "allow"

[package.metadata.cargo-udeps.ignore]
normal = ["uuid"]

[[example]]
name = "quickstart"
doc-scrape-examples = true
